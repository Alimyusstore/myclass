// Place your frontend scripts here

//import $ from "jquery";
// Import Slick
//import 'slick-carousel/slick/slick.min';
(function ($, Drupal) {

  document.addEventListener('DOMContentLoaded', function (event) {

    document.querySelectorAll("section.wp-block-custom-ge-rss-feeds").forEach(function (el) {
      var idx = el.getAttribute('data-ge-spotlight-instance-id');
      let linkTargetValue = el.getAttribute('data-link');

      var section = document.querySelector("section.wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id='" + idx + "']");
      var rssEndpoint = section.getAttribute('data-feed-source');

      var rssFeedItems;

      // Using fetch to retrieve RSS Feeds
      fetch(rssEndpoint, {
        method: 'GET',
        mode: 'cors',
        cache: 'no-cache',
        headers: {
          "Content-Type": "application/rss+xml; charset=utf-8",
          "Accept": "application/rss+xml",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Headers": "Origin, Content-Type, Accept",
        },

      }).then((response) => {
        if (!response.ok) {
          return;
        }
        else {
          return response.text();
        }
      }).then((text) => {
        return text;
      }).then((data) => {

        var results = new DOMParser().parseFromString(data, "text/xml");
        var items = results.querySelectorAll("item");

        var rss_items = [];
        if (items.length) {
          items.forEach(function (el) {
            var pubDate = el.querySelector("pubDate").innerHTML;
            var date = new Date(pubDate);
            var months = Array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December");
            var string = months[date.getMonth()] + " " + date.getDate() + ", " + date.getFullYear();
            if (el.querySelector("thumbnail")) {
              rss_items.push({
                "thumbnail": el.querySelector("thumbnail").innerHTML,
                "title": el.querySelector("title").innerHTML,
                "link": el.querySelector("link").innerHTML,
                "pubDate": string,

              });
            }

            else {
              rss_items.push({
                "title": el.querySelector("title").innerHTML,
                "link": el.querySelector("link").innerHTML,
                "pubDate": string,
              });
            }

          });

        }

        return rss_items;
      }).then((feed_items) => {

        var feeds_markup = '';

        if (feed_items.length) {
          let linkTargetAttr = (linkTargetValue === "newTab") ? '_blank' : '_self';
          feed_items.forEach(function (item) {

            if (item.thumbnail) {

              feeds_markup +=
                `<div class="wp-block-custom-ge-feature-card-image">
                <div class="card-container" style="background-color:var(--ge-dark-blue-grey);">
                  <div class="card-feature"><img alt="General Electric" src="${item.thumbnail}" class="lazyloaded" loading="lazy" /></div>
                  <div class="card-stack" style="background-color:var(--ge-dark-blue-grey)">
                    <div class="card-title">
                      <p class="body-2" style="color:var(--ge-white);text-align:left"><a href="${item.link}" target="${linkTargetAttr}" rel="noopener noreferrer">${item.title}</a></p>
                    </div>
                    <div class="card-cta">
                      <p class="call-to-action caption" style="color:var(--ge-white)">${item.pubDate}</p>
                    </div>
                  </div>
                </div>
              </div>`;

            }
            else {

              feeds_markup +=
                `<div class="wp-block-custom-ge-feature-card">
                <div class="card-container" style="background-color:var(--ge-primary-blue);">
                  <div class="card-stack">
                    <div class="card-title">
                      <h3 class="title " style="color:var(--ge-white);text-align:left"><a href="${item.link}" target="${linkTargetAttr}" rel="noopener noreferrer">${item.title}</a></h3>
                    </div>
                    <div class="card-cta">
                      <p class="call-to-action caption" style="color:var(--ge-white)">${item.pubDate}</p>
                    </div>
                  </div>
                </div>
              </div>`;

            }

          });
        }

        document.querySelector("section.wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .slider-container-row .slider-items").innerHTML = feeds_markup;

      }).then(() => {

        if ($(".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .slider-items").length) {

          // Get count of slides
          $(".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .slider-items").on("init reinit", function (event, slick) {

            if (slick.slideCount > 0 && !isNaN(slick.slideCount)) {
              var slideMargin = parseInt($(slick.$slides[0]).css('margin-right'));
              var slideTotalWidth = slick.$slides[0].clientWidth + slideMargin;
              var slidesWidth = (slideTotalWidth * slick.slideCount) - slideMargin;

              //check if total width of slides is less than the slider window
              if (slidesWidth < slick.$slider[0].clientWidth) {
                $(".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] div.carousel-control").addClass("control-hidden");
              }
              else {
                $(".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] div.carousel-control").removeClass("control-hidden");
              }
            }
          });

          $(".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .slider-items").slick({
            speed: 300,
            slidesToShow: 3.25,
            slidesToScroll: 1,

            prevArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-prev",
            nextArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-next",

            infinite: false,
            mobileFirst: true,
            rows: 1,
            variableWidth: true,

            responsive: [{
              breakpoint: 1200, //mf min(1200)
              settings: {
                slidesToShow: 2.2,
                slidesToScroll: 1,
                rows: 1,
                prevArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-prev",
                nextArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-next",
                variableWidth: true,
              },
            }, {
              breakpoint: 992,  //mf min(992)
              settings: {
                slidesToShow: 1.8,
                slidesToScroll: 1,
                rows: 1,
                prevArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-prev",
                nextArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-next",
                variableWidth: true,
              },
            }, {
              breakpoint: 767, //mf min(767)
              settings: {
                slidesToShow: 1.6,
                slidesToScroll: 1,
                rows: 1,
                prevArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-prev",
                nextArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-next",
                variableWidth: true,
              },
            }, {
              breakpoint: 576,  //mf min(576)
              settings: {
                slidesToShow: 1.5,
                slidesToScroll: 1,
                centerMode: true,
                rows: 1,
                prevArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-prev",
                nextArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-next",
                variableWidth: true,
              },
            }, {
              breakpoint: 300,  //mf min(320)
              settings: {
                slidesToShow: 1,
                slidesToScroll: 1,
                centerMode: true,
                rows: 1,
                prevArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-prev",
                nextArrow: ".wp-block-custom-ge-rss-feeds[data-ge-spotlight-instance-id = '" + idx + "'] .ctrl-next",
                variableWidth: true,
              },
            },

            // You can unslick at a given breakpoint now by adding:
              // settings: "unslick"
              // instead of a settings object
            ]
          });

        }

      }).catch(err => console.log('error', err));

    })

  });

})(jQuery, Drupal);